{"version":3,"sources":["Components/LoadingDots.jsx","Components/Lyrics.jsx","Components/Stream.jsx","App.js","serviceWorker.js","index.js"],"names":["BounceAnimation","keyframes","_templateObject","DotWrapper","styled","div","_templateObject2","Dot","_templateObject3","props","delay","LoadingDots","react_default","a","createElement","Component","spotifyApi","SpotifyWebApi","Lyrics","_this","Object","classCallCheck","this","params","possibleConstructorReturn","getPrototypeOf","call","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","lyrics","time_left","total_time","console","log","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","_this2","getMyCurrentPlaybackState","then","response","is_playing","item","valueOf","getNowPlaying","setState","artist","artists","album","images","url","duration_ms","progress_ms","_this2$state$nowPlayi","_this2$state$nowPlayi2","_this3","interval","setInterval","hasChanged","$","document","on","css","left","pageX","top","pageY","el","_$$offset","offset","cursPosX","cursPosY","cursFromCenterX","width","cursFromCenterY","height","invertedX","Math","sign","abs","find","removeClass","addClass","clearInterval","_this4","replace","song_name","split","slice","join","fetch","data","json","parsed","song_lyrics","catch","err","_this5","map","key","uniqueId","className","Fragment","id","onClick","type","htmlFor","href","style","margin","ProgressBar","active","striped","bsStyle","now","floor","backgroundImage","Components_LoadingDots","Stream","play","bind","assertThisInitialized","host","isPlaying","icon","marginLeft","seek","navigator","userAgent","indexOf","alert","documentMode","getElementById","pause","src","currentTime","setDevice","preload","fontSize","Header","Link","textDecoration","to","App","BrowserRouter","App_Header","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.1768df20.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport styled, { keyframes } from \"styled-components\";\r\nconst BounceAnimation = keyframes`\r\n  0% { margin-bottom: 0; }\r\n  50% { margin-bottom: 15px }\r\n  100% { margin-bottom: 0 }\r\n`;\r\nconst DotWrapper = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n`;\r\nconst Dot = styled.div`\r\n  background-color: black;\r\n  border-radius: 50%;\r\n  width: 10px;\r\n  height: 10px;\r\n  margin: 0 5px;\r\n  /* Animation */\r\n  animation: ${BounceAnimation} 0.5s linear infinite;\r\n  animation-delay: ${props => props.delay};\r\n`;\r\nclass LoadingDots extends Component {\r\n  render() {\r\n    return (\r\n      <DotWrapper>\r\n        <Dot delay=\"0s\" />\r\n        <Dot delay=\".1s\" />\r\n        <Dot delay=\".2s\" />\r\n      </DotWrapper>\r\n    );\r\n  }\r\n}\r\nexport default LoadingDots;\r\n","import React, { Component } from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport $ from \"jquery\";\r\nimport LoadingDots from \"./LoadingDots\";\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nclass Lyrics extends Component {\r\n  constructor() {\r\n    super();\r\n    const params = this.getHashParams();\r\n    const token = params.access_token;\r\n    if (token) {\r\n      spotifyApi.setAccessToken(token);\r\n    }\r\n    this.state = {\r\n      loggedIn: token ? true : false,\r\n      nowPlaying: {\r\n        name: \"Nothing is playing\",\r\n        albumArt: \"\",\r\n        lyrics: [],\r\n        time_left: 0,\r\n        total_time: 0\r\n      }\r\n    };\r\n    console.log(params);\r\n  }\r\n  getHashParams() {\r\n    var hashParams = {};\r\n    var e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    e = r.exec(q);\r\n    while (e) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n      e = r.exec(q);\r\n    }\r\n    return hashParams;\r\n  }\r\n  hasChanged() {\r\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\r\n      if (response.is_playing) {\r\n        console.log(response);\r\n        console.log(response.item.name);\r\n        console.log(this.state.nowPlaying.name);\r\n        if (\r\n          response.item.name.valueOf() !== this.state.nowPlaying.name.valueOf()\r\n        ) {\r\n          this.getNowPlaying();\r\n          this.setState({\r\n            nowPlaying: {\r\n              name: response.item.name,\r\n              artist: response.item.artists[0].name,\r\n              albumArt:\r\n                typeof response.item.album === \"undefined\"\r\n                  ? response.item.album.images[0].url\r\n                  : \"\",\r\n              total_time: response.item.duration_ms,\r\n              time_left: response.item.duration_ms - response.progress_ms,\r\n              lyrics: []\r\n            }\r\n          });\r\n        } else {\r\n          const { name, artist, total_time, lyrics } = this.state.nowPlaying;\r\n          this.setState({\r\n            nowPlaying: {\r\n              name: name,\r\n              artist: artist,\r\n              albumArt:\r\n                typeof response.item.album !== \"undefined\"\r\n                  ? response.item.album.images[0].url\r\n                  : \"\",\r\n              total_time: total_time,\r\n              time_left: response.item.duration_ms - response.progress_ms,\r\n              lyrics: lyrics\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        const { artist, albumArt, total_time, lyrics } = this.state.nowPlaying;\r\n        this.setState({\r\n          nowPlaying: {\r\n            name: \"Nothing is Playing\",\r\n            artist: artist,\r\n            albumArt: albumArt,\r\n            total_time: total_time,\r\n            time_left: 0,\r\n            lyrics: lyrics\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.hasChanged(), 3000);\r\n    $(document).on(\"mousemove\", function(e) {\r\n      $(\".light\").css({\r\n        left: e.pageX - 300,\r\n        top: e.pageY - 300\r\n      });\r\n    });\r\n\r\n    var el = $(\".js-tilt-container\");\r\n\r\n    el.on(\"mousemove\", function(e) {\r\n      var _$$offset = $(this).offset(),\r\n        left = _$$offset.left,\r\n        top = _$$offset.top;\r\n      var cursPosX = e.pageX - left;\r\n      var cursPosY = e.pageY - top;\r\n      var cursFromCenterX = $(this).width() / 2 - cursPosX;\r\n      var cursFromCenterY = $(this).height() / 2 - cursPosY;\r\n\r\n      $(this).css(\r\n        \"transform\",\r\n        \"perspective(500px) rotateX(\" +\r\n          cursFromCenterY / 40 +\r\n          \"deg) rotateY(\" +\r\n          -(cursFromCenterX / 40) +\r\n          \"deg) translateZ(10px)\"\r\n      );\r\n\r\n      var invertedX =\r\n        Math.sign(cursFromCenterX) > 0\r\n          ? -Math.abs(cursFromCenterX)\r\n          : Math.abs(cursFromCenterX);\r\n\r\n      //Parallax transform on image\r\n      $(this)\r\n        .find(\".js-perspective-neg\")\r\n        .css(\r\n          \"transform\",\r\n          \"translateY(\" +\r\n            cursFromCenterY / 10 +\r\n            \"px) translateX(\" +\r\n            -(invertedX / 10) +\r\n            \"px) scale(1.15)\"\r\n        );\r\n\r\n      $(this).removeClass(\"leave\");\r\n    });\r\n\r\n    el.on(\"mouseleave\", function() {\r\n      $(this).addClass(\"leave\");\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  getNowPlaying() {\r\n    spotifyApi\r\n      .getMyCurrentPlaybackState()\r\n      .then(response => {\r\n        var artist = response.item.artists[0].name.replace(/[^\\w\\s]/g, \"\");\r\n        if (response.item.artists[1]) {\r\n          artist =\r\n            artist +\r\n            \" \" +\r\n            response.item.artists[1].name.replace(/[^\\w\\s]/g, \"\");\r\n        }\r\n        console.log(response);\r\n        console.log(artist);\r\n        var song_name = response.item.name.split(\"(\")[0];\r\n        console.log(song_name);\r\n        song_name = response.item.name.replace(/[^\\w\\s]/g, \"\");\r\n        song_name = song_name.split(\" \");\r\n        song_name = song_name.slice(0, 5);\r\n        song_name = song_name.join(\"%20\");\r\n        song_name = song_name.replace(\",\", \"%20\");\r\n        console.log(song_name);\r\n        var url =\r\n          \"http://ariczhuang.ddns.net:8888/get_lyrics/?artist=\" +\r\n          song_name +\r\n          \"&name=\" +\r\n          artist.replace(\" \", \"%20\");\r\n        fetch(url)\r\n          .then(data => data.json())\r\n          .then(data => {\r\n            var parsed = data.lyrics.song_lyrics.split(\"\\n\");\r\n\r\n            this.setState({\r\n              nowPlaying: {\r\n                name: response.item.name,\r\n                artist: response.item.artists[0].name,\r\n                albumArt:\r\n                  typeof response.item.album !== \"undefined\"\r\n                    ? response.item.album.images[0].url\r\n                    : \"\",\r\n                total_time: response.item.duration_ms,\r\n                time_left: response.item.duration_ms - response.progress_ms,\r\n                lyrics: parsed\r\n              }\r\n            });\r\n          })\r\n          .catch(err => console.log(\"lyrical error:\" + err));\r\n      })\r\n      .catch(err => console.log(\"There was an error:\" + err));\r\n  }\r\n\r\n  render() {\r\n    const lyrics = this.state.nowPlaying.lyrics.map(item =>\r\n      item === \"\" ? (\r\n        <br key={item.uniqueId} />\r\n      ) : (\r\n        <div key={item.uniqueId}>{item}</div>\r\n      )\r\n    );\r\n    return (\r\n      <div className=\"Lyrics\">\r\n        {this.state.loggedIn && (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <input\r\n              id=\"mycheckbox\"\r\n              onClick={() => this.getNowPlaying()}\r\n              type=\"checkbox\"\r\n            />\r\n            <label htmlFor=\"mycheckbox\" />\r\n          </React.Fragment>\r\n        )}\r\n        {!this.state.loggedIn && (\r\n          <a href=\"http://ariczhuang.ddns.net:8888/login\">\r\n            Connect your Spotify\r\n          </a>\r\n        )}\r\n        <div>\r\n          {this.state.nowPlaying.name}\r\n          <div style={{ width: \"300px\", margin: \"auto\" }}>\r\n            <ProgressBar\r\n              active\r\n              striped\r\n              bsStyle=\"info\"\r\n              now={Math.floor(\r\n                (1 -\r\n                  this.state.nowPlaying.time_left /\r\n                    this.state.nowPlaying.total_time) *\r\n                  100\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div\r\n            className=\"image-shadow js-tilt-container\"\r\n            style={{\r\n              backgroundImage: \"url(\" + this.state.nowPlaying.albumArt + \")\"\r\n            }}\r\n          >\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <div>{lyrics === [] ? <LoadingDots /> : lyrics}</div>\r\n\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lyrics;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Stream extends Component {\r\n  constructor() {\r\n    super();\r\n    this.play = this.play.bind(this);\r\n    this.host = \"ariczhuang.ddns.net:80\";\r\n    this.state = {\r\n      isPlaying: false,\r\n      icon: \"fa fa-play fa-2x\",\r\n      marginLeft: \"12px\"\r\n    };\r\n  }\r\n\r\n  setDevice() {\r\n    var seek;\r\n    -1 !==\r\n    (navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf(\"OPR\"))\r\n      ? alert(\"Opera\")\r\n      : -1 !== navigator.userAgent.indexOf(\"Chrome\")\r\n      ? (seek = 1.45)\r\n      : -1 !== navigator.userAgent.indexOf(\"Safari\")\r\n      ? (seek = 0)\r\n      : -1 !== navigator.userAgent.indexOf(\"Firefox\")\r\n      ? (seek = 0)\r\n      : -1 < navigator.userAgent.indexOf(\"Edge\")\r\n      ? (seek = 0)\r\n      : -1 !== navigator.userAgent.indexOf(\"MSIE\") ||\r\n        1 === !!document.documentMode\r\n      ? alert(\"IE\")\r\n      : alert(\"unknown\");\r\n    console.log(seek);\r\n    return seek;\r\n  }\r\n  play() {\r\n    if (this.state.isPlaying) {\r\n      var e = document.getElementById(\"background\");\r\n      e.pause();\r\n      e.src = \"\";\r\n      this.setState({\r\n        isPlaying: false,\r\n        icon: \"fa fa-play fa-2x\",\r\n        marginLeft: \"12px\"\r\n      });\r\n    } else {\r\n      var e = document.getElementById(\"background\");\r\n      console.log(this);\r\n      e.src = \"http://\" + this.host + \"/stream\";\r\n      e.currentTime = this.setDevice();\r\n      e.play();\r\n      this.setState({\r\n        isPlaying: true,\r\n        icon: \"fa fa-pause fa-2x\",\r\n        marginLeft: \"0px\"\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"a\">\r\n        <audio id=\"background\">\r\n          <source src=\"\" preload=\"none\" type=\"audio/mpeg\" />\r\n        </audio>\r\n        <button\r\n          className=\"round-button\"\r\n          id=\"player\"\r\n          onClick={() => this.play()}\r\n        >\r\n          <i\r\n            className={this.state.icon}\r\n            style={{ fontSize: \"100px\", marginLeft: this.state.marginLeft }}\r\n          />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Stream;\r\n","import React from \"react\";\r\nimport Lyrics from \"./Components/Lyrics\";\r\nimport Stream from \"./Components/Stream\";\r\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => (\r\n  <Router>\r\n    <div>\r\n      <Header />\r\n      <Route exact path=\"/\" component={Lyrics} />\r\n      <Route path=\"/lyrics\" component={Lyrics} />\r\n      <Route path=\"/stream\" component={Stream} />\r\n    </div>\r\n  </Router>\r\n);\r\n\r\nconst Header = () => (\r\n  <div>\r\n    <br />\r\n    <Link\r\n      style={{ textDecoration: \"none\", width: \"150px\" }}\r\n      className=\"button\"\r\n      to=\"/lyrics\"\r\n    >\r\n      My Lyrics\r\n    </Link>\r\n    <br />\r\n    <Link\r\n      style={{ textDecoration: \"none\", width: \"150px\" }}\r\n      className=\"button\"\r\n      to=\"/stream\"\r\n    >\r\n      Radio Stream\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}