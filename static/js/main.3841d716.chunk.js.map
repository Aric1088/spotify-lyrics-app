{"version":3,"sources":["Components/Lyrics.jsx","Components/Stream.jsx","App.js","serviceWorker.js","index.js"],"names":["spotifyApi","SpotifyWebApi","Lyrics","_this","Object","classCallCheck","this","params","possibleConstructorReturn","getPrototypeOf","call","getHashParams","token","access_token","setAccessToken","state","loggedIn","nowPlaying","name","albumArt","lyrics","time_left","total_time","console","log","e","hashParams","r","q","window","location","hash","substring","exec","decodeURIComponent","_this2","getMyCurrentPlaybackState","then","response","is_playing","item","valueOf","getNowPlaying","setState","artist","artists","album","images","url","duration_ms","progress_ms","_this2$state$nowPlayi","_this2$state$nowPlayi2","_this3","interval","setInterval","hasChanged","$","document","on","css","left","pageX","top","pageY","el","_$$offset","offset","cursPosX","cursPosY","cursFromCenterX","width","cursFromCenterY","height","invertedX","Math","sign","abs","find","removeClass","addClass","clearInterval","_this4","replace","song_name","split","slice","join","fetch","data","json","parsed","song_lyrics","catch","err","_this5","map","react_default","a","createElement","key","uniqueId","className","Fragment","id","onClick","type","htmlFor","href","style","margin","ProgressBar","active","striped","bsStyle","now","floor","backgroundImage","Component","Stream","play","bind","assertThisInitialized","host","isPlaying","icon","marginLeft","seek","navigator","userAgent","indexOf","alert","documentMode","getElementById","pause","src","currentTime","setDevice","preload","fontSize","Header","Link","textDecoration","to","App","BrowserRouter","App_Header","Route","exact","path","component","Boolean","hostname","match","ReactDOM","render","src_App_0","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3841d716.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { ProgressBar } from \"react-bootstrap\";\r\nimport SpotifyWebApi from \"spotify-web-api-js\";\r\nimport $ from \"jquery\";\r\nconst spotifyApi = new SpotifyWebApi();\r\n\r\nclass Lyrics extends Component {\r\n  constructor() {\r\n    super();\r\n    const params = this.getHashParams();\r\n    const token = params.access_token;\r\n    if (token) {\r\n      spotifyApi.setAccessToken(token);\r\n    }\r\n    this.state = {\r\n      loggedIn: token ? true : false,\r\n      nowPlaying: {\r\n        name: \"Nothing is playing\",\r\n        albumArt: \"\",\r\n        lyrics: [],\r\n        time_left: 0,\r\n        total_time: 0\r\n      }\r\n    };\r\n    console.log(params);\r\n  }\r\n  getHashParams() {\r\n    var hashParams = {};\r\n    var e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    e = r.exec(q);\r\n    while (e) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n      e = r.exec(q);\r\n    }\r\n    return hashParams;\r\n  }\r\n  hasChanged() {\r\n    spotifyApi.getMyCurrentPlaybackState().then(response => {\r\n      if (response.is_playing) {\r\n        console.log(response);\r\n        console.log(response.item.name);\r\n        console.log(this.state.nowPlaying.name);\r\n        if (\r\n          response.item.name.valueOf() !== this.state.nowPlaying.name.valueOf()\r\n        ) {\r\n          this.getNowPlaying();\r\n          this.setState({\r\n            nowPlaying: {\r\n              name: response.item.name,\r\n              artist: response.item.artists[0].name,\r\n              albumArt:\r\n                typeof response.item.album === \"undefined\"\r\n                  ? response.item.album.images[0].url\r\n                  : \"\",\r\n              total_time: response.item.duration_ms,\r\n              time_left: response.item.duration_ms - response.progress_ms,\r\n              lyrics: []\r\n            }\r\n          });\r\n        } else {\r\n          const { name, artist, total_time, lyrics } = this.state.nowPlaying;\r\n          this.setState({\r\n            nowPlaying: {\r\n              name: name,\r\n              artist: artist,\r\n              albumArt:\r\n                typeof response.item.album !== \"undefined\"\r\n                  ? response.item.album.images[0].url\r\n                  : \"\",\r\n              total_time: total_time,\r\n              time_left: response.item.duration_ms - response.progress_ms,\r\n              lyrics: lyrics\r\n            }\r\n          });\r\n        }\r\n      } else {\r\n        const { artist, albumArt, total_time, lyrics } = this.state.nowPlaying;\r\n        this.setState({\r\n          nowPlaying: {\r\n            name: \"Nothing is Playing\",\r\n            artist: artist,\r\n            albumArt: albumArt,\r\n            total_time: total_time,\r\n            time_left: 0,\r\n            lyrics: lyrics\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  componentDidMount() {\r\n    this.interval = setInterval(() => this.hasChanged(), 3000);\r\n    $(document).on(\"mousemove\", function(e) {\r\n      $(\".light\").css({\r\n        left: e.pageX - 300,\r\n        top: e.pageY - 300\r\n      });\r\n    });\r\n\r\n    var el = $(\".js-tilt-container\");\r\n\r\n    el.on(\"mousemove\", function(e) {\r\n      var _$$offset = $(this).offset(),\r\n        left = _$$offset.left,\r\n        top = _$$offset.top;\r\n      var cursPosX = e.pageX - left;\r\n      var cursPosY = e.pageY - top;\r\n      var cursFromCenterX = $(this).width() / 2 - cursPosX;\r\n      var cursFromCenterY = $(this).height() / 2 - cursPosY;\r\n\r\n      $(this).css(\r\n        \"transform\",\r\n        \"perspective(500px) rotateX(\" +\r\n          cursFromCenterY / 40 +\r\n          \"deg) rotateY(\" +\r\n          -(cursFromCenterX / 40) +\r\n          \"deg) translateZ(10px)\"\r\n      );\r\n\r\n      var invertedX =\r\n        Math.sign(cursFromCenterX) > 0\r\n          ? -Math.abs(cursFromCenterX)\r\n          : Math.abs(cursFromCenterX);\r\n\r\n      //Parallax transform on image\r\n      $(this)\r\n        .find(\".js-perspective-neg\")\r\n        .css(\r\n          \"transform\",\r\n          \"translateY(\" +\r\n            cursFromCenterY / 10 +\r\n            \"px) translateX(\" +\r\n            -(invertedX / 10) +\r\n            \"px) scale(1.15)\"\r\n        );\r\n\r\n      $(this).removeClass(\"leave\");\r\n    });\r\n\r\n    el.on(\"mouseleave\", function() {\r\n      $(this).addClass(\"leave\");\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    clearInterval(this.interval);\r\n  }\r\n\r\n  getNowPlaying() {\r\n    spotifyApi\r\n      .getMyCurrentPlaybackState()\r\n      .then(response => {\r\n        var artist = response.item.artists[0].name.replace(/[^\\w\\s]/g, \"\");\r\n        if (response.item.artists[1]) {\r\n          artist =\r\n            artist +\r\n            \" \" +\r\n            response.item.artists[1].name.replace(/[^\\w\\s]/g, \"\");\r\n        }\r\n        console.log(response);\r\n        console.log(artist);\r\n        var song_name = response.item.name.split(\"(\")[0];\r\n        console.log(song_name);\r\n        song_name = response.item.name.replace(/[^\\w\\s]/g, \"\");\r\n        song_name = song_name.split(\" \");\r\n        song_name = song_name.slice(0, 5);\r\n        song_name = song_name.join(\"%20\");\r\n        song_name = song_name.replace(\",\", \"%20\");\r\n        console.log(song_name);\r\n        var url =\r\n          \"http://localhost:8888/get_lyrics/?artist=\" +\r\n          song_name +\r\n          \"&name=\" +\r\n          artist.replace(\" \", \"%20\");\r\n        fetch(url)\r\n          .then(data => data.json())\r\n          .then(data => {\r\n            var parsed = data.lyrics.song_lyrics.split(\"\\n\");\r\n\r\n            this.setState({\r\n              nowPlaying: {\r\n                name: response.item.name,\r\n                artist: response.item.artists[0].name,\r\n                albumArt:\r\n                  typeof response.item.album !== \"undefined\"\r\n                    ? response.item.album.images[0].url\r\n                    : \"\",\r\n                total_time: response.item.duration_ms,\r\n                time_left: response.item.duration_ms - response.progress_ms,\r\n                lyrics: parsed\r\n              }\r\n            });\r\n          })\r\n          .catch(err => console.log(\"lyrical error:\" + err));\r\n      })\r\n      .catch(err => console.log(\"There was an error:\" + err));\r\n  }\r\n\r\n  render() {\r\n    const lyrics = this.state.nowPlaying.lyrics.map(item =>\r\n      item === \"\" ? (\r\n        <br key={item.uniqueId} />\r\n      ) : (\r\n        <div key={item.uniqueId}>{item}</div>\r\n      )\r\n    );\r\n    return (\r\n      <div className=\"Lyrics\">\r\n        {this.state.loggedIn && (\r\n          <React.Fragment>\r\n            {\" \"}\r\n            <input\r\n              id=\"mycheckbox\"\r\n              onClick={() => this.getNowPlaying()}\r\n              type=\"checkbox\"\r\n            />\r\n            <label htmlFor=\"mycheckbox\" />\r\n          </React.Fragment>\r\n        )}\r\n        {!this.state.loggedIn && (\r\n          <a href=\"http://localhost:8888/login\">Connect your Spotify</a>\r\n        )}\r\n        <div>\r\n          {this.state.nowPlaying.name}\r\n          <div style={{ width: \"300px\", margin: \"auto\" }}>\r\n            <ProgressBar\r\n              active\r\n              striped\r\n              bsStyle=\"info\"\r\n              now={Math.floor(\r\n                (1 -\r\n                  this.state.nowPlaying.time_left /\r\n                    this.state.nowPlaying.total_time) *\r\n                  100\r\n              )}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div\r\n            className=\"image-shadow js-tilt-container\"\r\n            style={{\r\n              backgroundImage: \"url(\" + this.state.nowPlaying.albumArt + \")\"\r\n            }}\r\n          >\r\n            <br />\r\n            <br />\r\n          </div>\r\n        </div>\r\n        <div>Lyrics: {lyrics}</div>\r\n        <br />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Lyrics;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Stream extends Component {\r\n  constructor() {\r\n    super();\r\n    this.play = this.play.bind(this);\r\n    this.host = \"ariczhuang.ddns.net:80\";\r\n    this.state = {\r\n      isPlaying: false,\r\n      icon: \"fa fa-play fa-2x\",\r\n      marginLeft: \"12px\"\r\n    };\r\n  }\r\n\r\n  setDevice() {\r\n    var seek;\r\n    -1 !==\r\n    (navigator.userAgent.indexOf(\"Opera\") || navigator.userAgent.indexOf(\"OPR\"))\r\n      ? alert(\"Opera\")\r\n      : -1 !== navigator.userAgent.indexOf(\"Chrome\")\r\n      ? (seek = 1.45)\r\n      : -1 !== navigator.userAgent.indexOf(\"Safari\")\r\n      ? (seek = 0)\r\n      : -1 !== navigator.userAgent.indexOf(\"Firefox\")\r\n      ? (seek = 0)\r\n      : -1 < navigator.userAgent.indexOf(\"Edge\")\r\n      ? (seek = 0)\r\n      : -1 !== navigator.userAgent.indexOf(\"MSIE\") ||\r\n        1 === !!document.documentMode\r\n      ? alert(\"IE\")\r\n      : alert(\"unknown\");\r\n    console.log(seek);\r\n    return seek;\r\n  }\r\n  play() {\r\n    if (this.state.isPlaying) {\r\n      var e = document.getElementById(\"background\");\r\n      e.pause();\r\n      e.src = \"\";\r\n      this.setState({\r\n        isPlaying: false,\r\n        icon: \"fa fa-play fa-2x\",\r\n        marginLeft: \"12px\"\r\n      });\r\n    } else {\r\n      var e = document.getElementById(\"background\");\r\n      console.log(this);\r\n      e.src = \"http://\" + this.host + \"/stream\";\r\n      e.currentTime = this.setDevice();\r\n      e.play();\r\n      this.setState({\r\n        isPlaying: true,\r\n        icon: \"fa fa-pause fa-2x\",\r\n        marginLeft: \"0px\"\r\n      });\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div id=\"a\">\r\n        <audio id=\"background\">\r\n          <source src=\"\" preload=\"none\" type=\"audio/mpeg\" />\r\n        </audio>\r\n        <button\r\n          className=\"round-button\"\r\n          id=\"player\"\r\n          onClick={() => this.play()}\r\n        >\r\n          <i\r\n            className={this.state.icon}\r\n            style={{ fontSize: \"100px\", marginLeft: this.state.marginLeft }}\r\n          />\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Stream;\r\n","import React from \"react\";\nimport Lyrics from \"./Components/Lyrics\";\nimport Stream from \"./Components/Stream\";\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport \"./App.css\";\n\nconst App = () => (\n  <Router>\n    <div>\n      <Header />\n      <Route exact path=\"/\" component={Lyrics} />\n      <Route path=\"/lyrics\" component={Lyrics} />\n      <Route path=\"/stream\" component={Stream} />\n    </div>\n  </Router>\n);\n\nconst Header = () => (\n  <div>\n    <br />\n    <Link\n      style={{ textDecoration: \"none\", width: \"150px\" }}\n      className=\"button\"\n      to=\"/lyrics\"\n    >\n      My Lyrics\n    </Link>\n    <br />\n    <Link\n      style={{ textDecoration: \"none\", width: \"150px\" }}\n      className=\"button\"\n      to=\"/stream\"\n    >\n      Radio Stream\n    </Link>\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}